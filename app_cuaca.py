# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Rp9WN-oHYumj4eOVbmphqAJyJqOV-ACL
"""

import streamlit as st
import pandas as pd
import numpy as np
import joblib
import matplotlib.pyplot as plt
import seaborn as sns

# ========== TITLE ==========
st.set_page_config(page_title="Prediksi Cuaca", layout="wide")
st.title("üå§Ô∏è Aplikasi Prediksi Cuaca dengan Naive Bayes")

# ========== LOAD MODEL DAN ENCODER ==========
model = joblib.load("naive_bayes_weather_model.pkl")
le = joblib.load("weather_label_encoder.pkl")

# ========== MENU NAVIGASI ==========
menu = st.sidebar.radio("Navigasi", ["Deskripsi Data", "Prediksi", "Visualisasi"])

# ========== DEKRIPSI DATA ==========
if menu == "Deskripsi Data":
    st.header("üìä Deskripsi Dataset Cuaca")
    uploaded_file = st.file_uploader("Upload file CSV cuaca kamu:", type=["csv"])
    if uploaded_file is not None:
        df = pd.read_csv(uploaded_file)
        st.subheader("5 Baris Pertama Data:")
        st.dataframe(df.head())

        st.subheader("Statistik Deskriptif:")
        st.write(df.describe())

        st.subheader("Informasi Kolom:")
        buffer = pd.DataFrame({
            "Kolom": df.columns,
            "Tipe Data": df.dtypes,
            "Jumlah Null": df.isnull().sum()
        })
        st.write(buffer)

# ========== PREDIKSI ==========
elif menu == "Prediksi":
    st.header("üîç Prediksi Cuaca")
    st.write("Masukkan fitur-fitur berikut untuk memprediksi cuaca:")

    temp = st.slider("Temperatur (¬∞C)", -30.0, 40.0, 20.0)
    dew = st.slider("Titik Embun (¬∞C)", -30.0, 30.0, 10.0)
    hum = st.slider("Kelembapan Relatif (%)", 0, 100, 70)
    wind = st.slider("Kecepatan Angin (km/h)", 0, 100, 10)
    vis = st.slider("Jarak Pandang (km)", 0.0, 50.0, 20.0)
    press = st.slider("Tekanan Udara (kPa)", 95.0, 105.0, 101.0)
    hour = st.slider("Jam", 0, 23, 12)
    month = st.slider("Bulan", 1, 12, 6)
    day = st.slider("Hari", 1, 31, 15)
    weekday = st.slider("Hari dalam Minggu (0=Senin)", 0, 6, 2)

    if st.button("Prediksi"):
        input_data = np.array([[temp, dew, hum, wind, vis, press, hour, month, day, weekday]])
        prediction = model.predict(input_data)
        label = le.inverse_transform(prediction)
        st.success(f"Prediksi Cuaca: **{label[0]}**")

# ========== VISUALISASI ==========
elif menu == "Visualisasi":
    st.header("üìà Visualisasi Cuaca")
    uploaded_file = st.file_uploader("Upload dataset untuk visualisasi", type=["csv"], key="visu")
    if uploaded_file is not None:
        df = pd.read_csv(uploaded_file)
        if 'Weather' in df.columns:
            st.subheader("Distribusi Cuaca")
            fig, ax = plt.subplots(figsize=(10, 5))
            sns.countplot(data=df, x='Weather', order=df['Weather'].value_counts().index, ax=ax)
            plt.xticks(rotation=45)
            st.pyplot(fig)
        else:
            st.warning("Kolom 'Weather' tidak ditemukan di dataset.")